openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /article:
    get:
      tags:
      - article-controller
      summary: Devuelve los primeros 10 artículos existentes
      operationId: firstPage
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageArticle'
    post:
      tags:
      - article-controller
      summary: Inserta artículo
      operationId: newArticle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Article'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Article'
  /article/:
    get:
      tags:
      - article-controller
      summary: Devuelve 10 artículos segun los parametros de busqueda
      operationId: whatPage
      parameters:
      - name: pagina
        in: query
        description: Pagina a buscar
        required: true
        schema:
          type: integer
          format: int32
      - name: orden
        in: query
        description: "Campo del artículo por el cual ordenar, por ejemplo 'published'"
        required: false
        schema:
          type: string
          default: ""
      - name: search
        in: query
        description: Texto por cual buscar en los titulos
        required: false
        schema:
          type: string
          default: ""
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageArticle'
  /article/{id}:
    delete:
      tags:
      - article-controller
      summary: Borra un artículo por id
      operationId: deleteArticle
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
components:
  schemas:
    Article:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        url:
          type: string
        summary:
          type: string
        published:
          type: string
          format: date-time
        adding:
          type: string
          format: date-time
    PageArticle:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/Article'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/SortObject'
        pageSize:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
        unpaged:
          type: boolean
        paged:
          type: boolean
    SortObject:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
